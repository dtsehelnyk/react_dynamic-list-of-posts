{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getAllPosts","a","fetch","request","json","getUserPosts","userId","allPosts","data","filter","post","getPostDetails","postId","PostsList","selectedUser","selectedPostId","handlePost","useState","posts","setPosts","useEffect","postsFromServer","getPosts","className","map","key","id","title","type","onClick","NewCommentForm","addComment","nameValue","setName","emailValue","setEmail","messageValue","setMessage","onSubmit","event","preventDefault","name","placeholder","value","onChange","target","getPostComments","sendComment","email","body","method","headers","JSON","stringify","deleteComment","commentId","PostDetails","setPost","comments","setComments","commentsVisibility","setCommentsVisibility","selectedPost","postComments","getDetails","inputName","inputEmail","inputMessage","deleteSelectedComment","length","comment","App","setUser","newValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87d5edc0.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getAllPosts = async() => {\n  const request = await fetch(`${BASE_URL}/posts/`);\n\n  return request.json();\n};\n\nexport const getUserPosts = async(userId) => {\n  const allPosts = await getAllPosts();\n\n  return userId === 'All users'\n    ? allPosts.data\n    : allPosts.data.filter(post => +post.userId === +userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const request = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return request.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ selectedUser, selectedPostId, handlePost }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async() => {\n      const postsFromServer = await getUserPosts(selectedUser);\n\n      setPosts(postsFromServer);\n    };\n\n    getPosts();\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>\n                [User\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              <p>{post.title}</p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                handlePost(post.id);\n              }}\n            >\n              {post.id === selectedPostId ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedUser: PropTypes.string.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  handlePost: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [nameValue, setName] = useState('');\n  const [emailValue, setEmail] = useState('');\n  const [messageValue, setMessage] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addComment(postId, nameValue, emailValue, messageValue);\n        setName('');\n        setEmail('');\n        setMessage('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={nameValue}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={emailValue}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={messageValue}\n          onChange={event => setMessage(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const request = await fetch(`${BASE_URL}/comments/?postId=${postId}`);\n\n  return request.json();\n};\n\nexport const sendComment = async(postId, name, email, body) => {\n  const request = await fetch(`${BASE_URL}/comments/`,\n    {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        postId,\n        name,\n        email,\n        body,\n      }),\n    });\n\n  return request.json();\n};\n\nexport const deleteComment = commentId => fetch(\n  `${BASE_URL}/comments/${commentId}`,\n  { method: 'DELETE' },\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport\n{ getPostComments, sendComment, deleteComment } from '../../api/comments';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [commentsVisibility, setCommentsVisibility] = useState(true);\n\n  const commentsHandle = () => {\n    setCommentsVisibility(!commentsVisibility);\n  };\n\n  useEffect(() => {\n    const getDetails = async() => {\n      const selectedPost = await getPostDetails(selectedPostId);\n      const postComments = await getPostComments(selectedPostId);\n\n      setPost(selectedPost.data);\n      setComments(postComments.data);\n    };\n\n    getDetails();\n  }, [selectedPostId]);\n\n  const getDetails = async() => {\n    const selectedPost = await getPostDetails(selectedPostId);\n    const postComments = await getPostComments(selectedPostId);\n\n    setPost(selectedPost.data);\n    setComments(postComments.data);\n  };\n\n  const addComment = async(postId, inputName, inputEmail, inputMessage) => {\n    await sendComment(postId, inputName, inputEmail, inputMessage);\n    getDetails();\n  };\n\n  const deleteSelectedComment = async(commentId) => {\n    await deleteComment(commentId);\n    getDetails();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length !== 0\n          && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={commentsHandle}\n            >\n              {commentsVisibility ? 'Hide ' : 'Show '}\n              {comments.length}\n              {comments.length === 1\n                ? ` comment`\n                : ` comments`\n              }\n            </button>\n          )\n        }\n\n        {commentsVisibility\n          && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\" key={comment.id}>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteSelectedComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            addComment={addComment}\n            comments={comments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setUser] = useState('All users');\n  const [selectedPostId, setPost] = useState(0);\n\n  const handleUser = (newValue) => {\n    setUser(newValue);\n  };\n\n  const handlePost = (postId) => {\n    selectedPostId === postId\n      ? setPost(0)\n      : setPost(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={(event) => {\n              handleUser(event.target.value);\n            }}\n          >\n            <option value=\"All users\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selectedUser}\n            selectedPostId={selectedPostId}\n            handlePost={handlePost}\n          />\n        </div>\n\n        {!!selectedPostId\n          && (\n            <div className=\"App__content\">\n              <PostDetails\n                selectedPostId={selectedPostId}\n              />\n            </div>\n          )\n        }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}